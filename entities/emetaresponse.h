#ifndef EMETARESPONSE_H
#define EMETARESPONSE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "cpplib_global.h"

#include "qjsonvalue.h"

/**
*@class EMetaResponse
**/
class CPPLIB_EXPORT EMetaResponse : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint32 responseType READ getResponseType WRITE setResponseType USER true)
	Q_PROPERTY(QString className READ getClassName WRITE setClassName USER true)
	Q_PROPERTY(QJsonValue value READ getValue WRITE setValue USER true)

public:
	Q_INVOKABLE EMetaResponse(QObject *parent=0);
	~EMetaResponse(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EMetaResponse(const EMetaResponse &d) : QObject () { setData(d); }
	Q_INVOKABLE EMetaResponse &operator=(const EMetaResponse &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EMetaResponse &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EMetaResponse &other) const{ if(equal(other))return false;return true;}
	inline qint32 getResponseType() const {return responseType;}
	void setResponseType(qint32 d){responseType=d;}
	Q_INVOKABLE QString getClassName() const {return className;}
	void setClassName(const QString &d){className=d;}
	Q_INVOKABLE QJsonValue getValue() const {return value;}
	void setValue(const QJsonValue &d){value=d;}

protected:
	EMetaResponse &setData(const EMetaResponse &d){
		responseType=d.responseType;
		className=d.className;
		value=d.value;
		return *this;
	}
	bool equal(const EMetaResponse &other) const {
		if(responseType!=other.responseType)return false;
		if(className!=other.className)return false;
		if(value!=other.value)return false;
		return true;
	}
	qint32 responseType;
	QString className;
	QJsonValue value;
};

Q_DECLARE_METATYPE(EMetaResponse)
Q_DECLARE_METATYPE(EMetaResponse*)
Q_DECLARE_METATYPE(QList<EMetaResponse*>)
Q_DECLARE_METATYPE(QList<EMetaResponse>)
#endif
